# Third-party
from PyQt6.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QLabel, QComboBox, QPushButton,
    QSpinBox, QCheckBox, QSizePolicy
)
from PyQt6.QtGui import QFont

# Local imports
from ..database import get_bool_setting, get_str_setting, get_int_setting, set_bool_setting, set_str_setting

def show_settings_dialog(parent=None) -> None:
    dlg = QDialog(parent)
    dlg.setWindowTitle("Settings")
    vbox = QVBoxLayout(dlg)
    vbox.setContentsMargins(12, 12, 12, 12)
    vbox.setSpacing(10)

    row_flags = QHBoxLayout()
    chk_cache = QCheckBox("Enable analysis cache")
    chk_cache.setChecked(get_bool_setting("allow_cache", True))
    row_flags.addWidget(chk_cache)
    vbox.addLayout(row_flags)

    row_theme = QHBoxLayout()
    row_theme.addWidget(QLabel("UI Theme:"))
    cmb_theme = QComboBox()
    cmb_theme.addItems(["dark", "light"])
    cmb_theme.setCurrentText(get_str_setting("ui_theme", "dark"))
    row_theme.addWidget(cmb_theme)
    vbox.addLayout(row_theme)

    row_dedup = QHBoxLayout()
    row_dedup.addWidget(QLabel("Default Dedup Method:"))
    cmb_dedup = QComboBox()
    cmb_dedup.addItems(["tfidf", "simple"])
    cmb_dedup.setCurrentText(get_str_setting("dedup_method", "tfidf"))
    row_dedup.addWidget(cmb_dedup)
    vbox.addLayout(row_dedup)

    row_rep = QHBoxLayout()
    row_rep.addWidget(QLabel("Reports size cap (MB):"))
    sp_rep_size = QSpinBox()
    sp_rep_size.setRange(0, 100000)
    sp_rep_size.setValue(get_int_setting("reports_max_size_mb", 512))
    row_rep.addWidget(sp_rep_size)
    row_rep.addWidget(QLabel("Reports max age (days):"))
    sp_rep_age = QSpinBox()
    sp_rep_age.setRange(0, 10000)
    sp_rep_age.setValue(get_int_setting("reports_max_age_days", 90))
    row_rep.addWidget(sp_rep_age)
    vbox.addLayout(row_rep)

    row_recent = QHBoxLayout()
    row_recent.addWidget(QLabel("Recent files max:"))
    sp_recent = QSpinBox()
    sp_recent.setRange(1, 200)
    sp_recent.setValue(get_int_setting("recent_max", 20))
    row_recent.addWidget(sp_recent)
    vbox.addLayout(row_recent)

    row_trends = QHBoxLayout()
    row_trends.addWidget(QLabel("Trends window (N recent runs):"))
    sp_trends = QSpinBox()
    sp_trends.setRange(3, 100)
    sp_trends.setValue(get_int_setting("trends_window", 10))
    row_trends.addWidget(sp_trends)
    vbox.addLayout(row_trends)

    row_pdf = QHBoxLayout()
    chk_pdf_chart = QCheckBox("Show mini chart in PDF")
    chk_pdf_chart.setChecked(get_bool_setting("pdf_chart_enabled", True))
    row_pdf.addWidget(chk_pdf_chart)
    row_pdf.addWidget(QLabel("Chart position:"))
    cmb_chart_pos = QComboBox()
    cmb_chart_pos.addItems(["bottom", "top", "none"])
    cmb_chart_pos.setCurrentText(get_str_setting("pdf_chart_position", "bottom"))
    row_pdf.addWidget(cmb_chart_pos)
    row_pdf.addWidget(QLabel("Chart theme:"))
    cmb_chart_theme = QComboBox()
    cmb_chart_theme.addItems(["dark", "light"])
    cmb_chart_theme.setCurrentText(get_str_setting("pdf_chart_theme", "dark"))
    row_pdf.addWidget(cmb_chart_theme)
    vbox.addLayout(row_pdf)

    row_btn = QHBoxLayout()
    btn_ok = QPushButton("Save")
    btn_cancel = QPushButton("Cancel")
    for b in (btn_ok, btn_cancel):
        f = QFont()
        f.setPointSize(12)
        f.setBold(True)
        b.setFont(f)
        b.setMinimumHeight(36)
        b.setStyleSheet("text-align:center; padding:8px 14px;")
        b.setSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
    row_btn.addStretch(1)
    row_btn.addWidget(btn_ok)
    row_btn.addWidget(btn_cancel)
    vbox.addLayout(row_btn)

    def on_save():
        set_bool_setting("allow_cache", chk_cache.isChecked())
        set_str_setting("ui_theme", cmb_theme.currentText().strip().lower())
        set_str_setting("dedup_method", cmb_dedup.currentText().strip())
        set_str_setting("reports_max_size_mb", str(sp_rep_size.value()))
        set_str_setting("reports_max_age_days", str(sp_rep_age.value()))
        set_bool_setting("pdf_chart_enabled", chk_pdf_chart.isChecked())
        set_str_setting("pdf_chart_position", cmb_chart_pos.currentText().strip().lower())
        set_str_setting("pdf_chart_theme", cmb_chart_theme.currentText().strip().lower())
        set_str_setting("recent_max", str(sp_recent.value()))
        set_str_setting("trends_window", str(sp_trends.value()))
        dlg.accept()

    btn_ok.clicked.connect(on_save)
    btn_cancel.clicked.connect(dlg.reject)
    dlg.show()
    dlg.raise_()
    dlg.activateWindow()
    dlg.exec()
